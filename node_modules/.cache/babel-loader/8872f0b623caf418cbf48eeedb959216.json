{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bdougie/code/use-shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/bdougie/code/use-shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/Users/bdougie/code/use-shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/bdougie/code/use-shopping-cart/examples/cra/src/components/product.js\";\n\n/**@jsx jsx */\nimport { jsx, Box, Image, Button, Flex } from 'theme-ui';\nimport { useShoppingCart, formatCurrencyString } from 'use-shopping-cart';\n\nconst Product = product => {\n  const _useShoppingCart = useShoppingCart(),\n        addItem = _useShoppingCart.addItem,\n        redirectToCheckout = _useShoppingCart.redirectToCheckout;\n\n  const name = product.name,\n        price = product.price,\n        image = product.image,\n        currency = product.currency;\n\n  function handleCheckout() {\n    return _handleCheckout.apply(this, arguments);\n  }\n\n  function _handleCheckout() {\n    _handleCheckout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/.netlify/functions/create-session', {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                [product.sku]: _objectSpread(_objectSpread({}, product), {}, {\n                  quantity: 1\n                })\n              })\n            }).then(res => {\n              return res.json();\n            }).catch(error => console.log(error));\n\n          case 2:\n            response = _context.sent;\n            redirectToCheckout({\n              sessionId: response.sessionId\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _handleCheckout.apply(this, arguments);\n  }\n\n  return jsx(Flex, {\n    sx: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, jsx(Image, {\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, name), jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, formatCurrencyString({\n    value: price,\n    currency\n  }))), jsx(Button, {\n    onClick: () => addItem(product),\n    backgroundColor: 'black',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Add To Cart\"), jsx(Button, {\n    onClick: handleCheckout,\n    backgroundColor: 'black',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Buy Now\"));\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/bdougie/code/use-shopping-cart/examples/cra/src/components/product.js"],"names":["jsx","Box","Image","Button","Flex","useShoppingCart","formatCurrencyString","Product","product","addItem","redirectToCheckout","name","price","image","currency","handleCheckout","fetch","method","headers","body","JSON","stringify","sku","quantity","then","res","json","catch","error","console","log","response","sessionId","flexDirection","justifyContent","alignItems","value"],"mappings":";;;;;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,UAA9C;AACA,SAASC,eAAT,EAA0BC,oBAA1B,QAAsD,mBAAtD;;AAEA,MAAMC,OAAO,GAAIC,OAAD,IAAa;AAAA,2BACaH,eAAe,EAD5B;AAAA,QACnBI,OADmB,oBACnBA,OADmB;AAAA,QACVC,kBADU,oBACVA,kBADU;;AAAA,QAEnBC,IAFmB,GAEcH,OAFd,CAEnBG,IAFmB;AAAA,QAEbC,KAFa,GAEcJ,OAFd,CAEbI,KAFa;AAAA,QAENC,KAFM,GAEcL,OAFd,CAENK,KAFM;AAAA,QAECC,QAFD,GAEcN,OAFd,CAECM,QAFD;;AAAA,WAIZC,cAJY;AAAA;AAAA;;AAAA;AAAA,+EAI3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBC,KAAK,CAAC,oCAAD,EAAuC;AACjEC,cAAAA,MAAM,EAAE,MADyD;AAEjEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFwD;AAKjEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,iBAACb,OAAO,CAACc,GAAT,mCAAoBd,OAApB;AAA6Be,kBAAAA,QAAQ,EAAE;AAAvC;AAAF,eAAf;AAL2D,aAAvC,CAAL,CAOpBC,IAPoB,CAOdC,GAAD,IAAS;AACb,qBAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,aAToB,EAUpBC,KAVoB,CAUbC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVG,CADzB;;AAAA;AACQG,YAAAA,QADR;AAaErB,YAAAA,kBAAkB,CAAC;AAAEsB,cAAAA,SAAS,EAAED,QAAQ,CAACC;AAAtB,aAAD,CAAlB;;AAbF;AAAA;AAAA;AAAA;AAAA;AAAA,KAJ2B;AAAA;AAAA;;AAoB3B,SACE,IAAC,IAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,aAAa,EAAE,QADb;AAEFC,MAAAA,cAAc,EAAE,QAFd;AAGFC,MAAAA,UAAU,EAAE;AAHV,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,IAAC,KAAD;AAAO,IAAA,GAAG,EAAEtB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,IAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,oBAAoB,CAAC;AAAE8B,IAAAA,KAAK,EAAExB,KAAT;AAAgBE,IAAAA;AAAhB,GAAD,CAAxB,CAFF,CARF,EAYE,IAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAML,OAAO,CAACD,OAAD,CAA9B;AAAyC,IAAA,eAAe,EAAE,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,EAeE,IAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,cAAjB;AAAiC,IAAA,eAAe,EAAE,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CADF;AAqBD,CAzCD;;AA2CA,eAAeR,OAAf","sourcesContent":["/**@jsx jsx */\r\nimport { jsx, Box, Image, Button, Flex } from 'theme-ui'\r\nimport { useShoppingCart, formatCurrencyString } from 'use-shopping-cart'\r\n\r\nconst Product = (product) => {\r\n  const { addItem, redirectToCheckout } = useShoppingCart()\r\n  const { name, price, image, currency } = product\r\n\r\n  async function handleCheckout() {\r\n    const response = await fetch('/.netlify/functions/create-session', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ [product.sku]: { ...product, quantity: 1 } })\r\n    })\r\n      .then((res) => {\r\n        return res.json()\r\n      })\r\n      .catch((error) => console.log(error))\r\n\r\n    redirectToCheckout({ sessionId: response.sessionId })\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      <Image src={image} />\r\n      <Box>\r\n        <p>{name}</p>\r\n        <p>{formatCurrencyString({ value: price, currency })}</p>\r\n      </Box>\r\n      <Button onClick={() => addItem(product)} backgroundColor={'black'}>\r\n        Add To Cart\r\n      </Button>\r\n      <Button onClick={handleCheckout} backgroundColor={'black'}>\r\n        Buy Now\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Product\r\n"]},"metadata":{},"sourceType":"module"}