{"ast":null,"code":"import { jsx } from '@theme-ui/core';\nexport { jsx, Context, merge, useThemeUI } from '@theme-ui/core';\nexport { useColorMode, InitializeColorMode } from '@theme-ui/color-modes';\nexport { Styled, components } from '@theme-ui/mdx';\nexport { ThemeProvider } from '@theme-ui/theme-provider';\nexport * from '@theme-ui/components';\nexport { css, get } from '@theme-ui/css';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar BaseStyles = function BaseStyles(props) {\n  return jsx('div', _objectSpread2({}, props, {\n    sx: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n      variant: 'styles'\n    }\n  }));\n};\n\nexport { BaseStyles };","map":{"version":3,"sources":["../src/index.js"],"names":["BaseStyles","jsx","sx","fontFamily","lineHeight","fontWeight","variant"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqBaA,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAK;SAC7BC,GAAG,CAAA,KAAA,EAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEDC,IAAAA,EAAE,EAAE;AACFC,MAAAA,UAAU,EADR,MAAA;AAEFC,MAAAA,UAAU,EAFR,MAAA;AAGFC,MAAAA,UAAU,EAHR,MAAA;AAIFC,MAAAA,OAAO,EAAE;AAJP;AAFH,GAAA,CAAA,C;AADE,C","sourcesContent":["import { jsx } from '@theme-ui/core'\n\nexport {\n  jsx,\n  Context,\n  merge,\n  useThemeUI,\n} from '@theme-ui/core'\nexport {\n  useColorMode,\n  InitializeColorMode,\n} from '@theme-ui/color-modes'\nexport {\n  Styled,\n  components,\n} from '@theme-ui/mdx'\nexport { ThemeProvider } from '@theme-ui/theme-provider'\nexport * from '@theme-ui/components'\nexport { css, get } from '@theme-ui/css'\n\n// TODO: work this into root provider/global styles?\nexport const BaseStyles = props =>\n  jsx('div', {\n    ...props,\n    sx: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n      variant: 'styles',\n    },\n  })\n\n"]},"metadata":{},"sourceType":"module"}