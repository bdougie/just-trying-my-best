{"ast":null,"code":"var get = function get(obj, key, def, p, undef) {\n  key = key && key.split ? key.split('.') : [key];\n\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef;\n  }\n\n  return obj === undef ? def : obj;\n};\n\nvar defaultBreakpoints = [40, 52, 64].map(function (n) {\n  return n + 'em';\n});\nvar defaultTheme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]\n};\nvar aliases = {\n  bg: 'backgroundColor',\n  m: 'margin',\n  mt: 'marginTop',\n  mr: 'marginRight',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mx: 'marginX',\n  my: 'marginY',\n  p: 'padding',\n  pt: 'paddingTop',\n  pr: 'paddingRight',\n  pb: 'paddingBottom',\n  pl: 'paddingLeft',\n  px: 'paddingX',\n  py: 'paddingY'\n};\nvar multiples = {\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginTop', 'marginBottom'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingTop', 'paddingBottom'],\n  size: ['width', 'height']\n};\nvar scales = {\n  color: 'colors',\n  backgroundColor: 'colors',\n  borderColor: 'colors',\n  margin: 'space',\n  marginTop: 'space',\n  marginRight: 'space',\n  marginBottom: 'space',\n  marginLeft: 'space',\n  marginX: 'space',\n  marginY: 'space',\n  padding: 'space',\n  paddingTop: 'space',\n  paddingRight: 'space',\n  paddingBottom: 'space',\n  paddingLeft: 'space',\n  paddingX: 'space',\n  paddingY: 'space',\n  top: 'space',\n  right: 'space',\n  bottom: 'space',\n  left: 'space',\n  gridGap: 'space',\n  gridColumnGap: 'space',\n  gridRowGap: 'space',\n  gap: 'space',\n  columnGap: 'space',\n  rowGap: 'space',\n  fontFamily: 'fonts',\n  fontSize: 'fontSizes',\n  fontWeight: 'fontWeights',\n  lineHeight: 'lineHeights',\n  letterSpacing: 'letterSpacings',\n  border: 'borders',\n  borderTop: 'borders',\n  borderRight: 'borders',\n  borderBottom: 'borders',\n  borderLeft: 'borders',\n  borderWidth: 'borderWidths',\n  borderStyle: 'borderStyles',\n  borderRadius: 'radii',\n  borderTopRightRadius: 'radii',\n  borderTopLeftRadius: 'radii',\n  borderBottomRightRadius: 'radii',\n  borderBottomLeftRadius: 'radii',\n  borderTopWidth: 'borderWidths',\n  borderTopColor: 'colors',\n  borderTopStyle: 'borderStyles',\n  borderBottomWidth: 'borderWidths',\n  borderBottomColor: 'colors',\n  borderBottomStyle: 'borderStyles',\n  borderLeftWidth: 'borderWidths',\n  borderLeftColor: 'colors',\n  borderLeftStyle: 'borderStyles',\n  borderRightWidth: 'borderWidths',\n  borderRightColor: 'colors',\n  borderRightStyle: 'borderStyles',\n  outlineColor: 'colors',\n  boxShadow: 'shadows',\n  textShadow: 'shadows',\n  zIndex: 'zIndices',\n  width: 'sizes',\n  minWidth: 'sizes',\n  maxWidth: 'sizes',\n  height: 'sizes',\n  minHeight: 'sizes',\n  maxHeight: 'sizes',\n  flexBasis: 'sizes',\n  size: 'sizes',\n  // svg\n  fill: 'colors',\n  stroke: 'colors'\n};\n\nvar positiveOrNegative = function positiveOrNegative(scale, value) {\n  if (typeof value !== 'number' || value >= 0) {\n    return get(scale, value, value);\n  }\n\n  var absolute = Math.abs(value);\n  var n = get(scale, absolute, absolute);\n\n  if (typeof n === 'string') {\n    return '-' + n;\n  }\n\n  return n * -1;\n};\n\nvar transforms = ['margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'top', 'bottom', 'left', 'right'].reduce(function (acc, curr) {\n  var obj;\n  return Object.assign({}, acc, (obj = {}, obj[curr] = positiveOrNegative, obj));\n}, {});\n\nvar responsive = function responsive(styles) {\n  return function (theme) {\n    var next = {};\n    var breakpoints = get(theme, 'breakpoints', defaultBreakpoints);\n    var mediaQueries = [null].concat(breakpoints.map(function (n) {\n      return \"@media screen and (min-width: \" + n + \")\";\n    }));\n\n    for (var key in styles) {\n      var value = typeof styles[key] === 'function' ? styles[key](theme) : styles[key];\n\n      if (value == null) {\n        continue;\n      }\n\n      if (!Array.isArray(value)) {\n        next[key] = value;\n        continue;\n      }\n\n      for (var i = 0; i < value.slice(0, mediaQueries.length).length; i++) {\n        var media = mediaQueries[i];\n\n        if (!media) {\n          next[key] = value[i];\n          continue;\n        }\n\n        next[media] = next[media] || {};\n\n        if (value[i] == null) {\n          continue;\n        }\n\n        next[media][key] = value[i];\n      }\n    }\n\n    return next;\n  };\n};\n\nvar css = function css(args) {\n  return function (props) {\n    if (props === void 0) props = {};\n    var theme = Object.assign({}, defaultTheme, props.theme || props);\n    var result = {};\n    var obj = typeof args === 'function' ? args(theme) : args;\n    var styles = responsive(obj)(theme);\n\n    for (var key in styles) {\n      var x = styles[key];\n      var val = typeof x === 'function' ? x(theme) : x;\n\n      if (key === 'variant') {\n        var variant = css(get(theme, val))(theme);\n        result = Object.assign({}, result, variant);\n        continue;\n      }\n\n      if (val && typeof val === 'object') {\n        result[key] = css(val)(theme);\n        continue;\n      }\n\n      var prop = get(aliases, key, key);\n      var scaleName = get(scales, prop);\n      var scale = get(theme, scaleName, get(theme, prop, {}));\n      var transform = get(transforms, prop, get);\n      var value = transform(scale, val, val);\n\n      if (multiples[prop]) {\n        var dirs = multiples[prop];\n\n        for (var i = 0; i < dirs.length; i++) {\n          result[dirs[i]] = value;\n        }\n      } else {\n        result[prop] = value;\n      }\n    }\n\n    return result;\n  };\n};\n\nexport { get, css };","map":{"version":3,"sources":["../src/index.js"],"names":["get","key","p","obj","const","defaultBreakpoints","n","defaultTheme","space","fontSizes","aliases","bg","m","mt","mr","mb","ml","mx","my","pt","pr","pb","pl","px","py","multiples","marginX","marginY","paddingX","paddingY","size","scales","color","backgroundColor","borderColor","margin","marginTop","marginRight","marginBottom","marginLeft","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","top","right","bottom","left","gridGap","gridColumnGap","gridRowGap","gap","columnGap","rowGap","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","border","borderTop","borderRight","borderBottom","borderLeft","borderWidth","borderStyle","borderRadius","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","outlineColor","boxShadow","textShadow","zIndex","width","minWidth","maxWidth","height","minHeight","maxHeight","flexBasis","fill","stroke","positiveOrNegative","value","absolute","Math","transforms","responsive","styles","theme","next","breakpoints","mediaQueries","Array","let","i","media","css","args","props","result","x","val","variant","prop","scaleName","scale","transform","dirs"],"mappings":"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","sourcesContent":["export const get = (obj, key, def, p, undef) => {\n  key = key && key.split ? key.split('.') : [key]\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef\n  }\n  return obj === undef ? def : obj\n}\n\nconst defaultBreakpoints = [40, 52, 64].map(n => n + 'em')\n\nconst defaultTheme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72],\n}\n\nconst aliases = {\n  bg: 'backgroundColor',\n  m: 'margin',\n  mt: 'marginTop',\n  mr: 'marginRight',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mx: 'marginX',\n  my: 'marginY',\n  p: 'padding',\n  pt: 'paddingTop',\n  pr: 'paddingRight',\n  pb: 'paddingBottom',\n  pl: 'paddingLeft',\n  px: 'paddingX',\n  py: 'paddingY',\n}\n\nconst multiples = {\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginTop', 'marginBottom'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingTop', 'paddingBottom'],\n  size: ['width', 'height'],\n}\n\nconst scales = {\n  color: 'colors',\n  backgroundColor: 'colors',\n  borderColor: 'colors',\n  margin: 'space',\n  marginTop: 'space',\n  marginRight: 'space',\n  marginBottom: 'space',\n  marginLeft: 'space',\n  marginX: 'space',\n  marginY: 'space',\n  padding: 'space',\n  paddingTop: 'space',\n  paddingRight: 'space',\n  paddingBottom: 'space',\n  paddingLeft: 'space',\n  paddingX: 'space',\n  paddingY: 'space',\n  top: 'space',\n  right: 'space',\n  bottom: 'space',\n  left: 'space',\n  gridGap: 'space',\n  gridColumnGap: 'space',\n  gridRowGap: 'space',\n  gap: 'space',\n  columnGap: 'space',\n  rowGap: 'space',\n  fontFamily: 'fonts',\n  fontSize: 'fontSizes',\n  fontWeight: 'fontWeights',\n  lineHeight: 'lineHeights',\n  letterSpacing: 'letterSpacings',\n  border: 'borders',\n  borderTop: 'borders',\n  borderRight: 'borders',\n  borderBottom: 'borders',\n  borderLeft: 'borders',\n  borderWidth: 'borderWidths',\n  borderStyle: 'borderStyles',\n  borderRadius: 'radii',\n  borderTopRightRadius: 'radii',\n  borderTopLeftRadius: 'radii',\n  borderBottomRightRadius: 'radii',\n  borderBottomLeftRadius: 'radii',\n  borderTopWidth: 'borderWidths',\n  borderTopColor: 'colors',\n  borderTopStyle: 'borderStyles',\n  borderBottomWidth: 'borderWidths',\n  borderBottomColor: 'colors',\n  borderBottomStyle: 'borderStyles',\n  borderLeftWidth: 'borderWidths',\n  borderLeftColor: 'colors',\n  borderLeftStyle: 'borderStyles',\n  borderRightWidth: 'borderWidths',\n  borderRightColor: 'colors',\n  borderRightStyle: 'borderStyles',\n  outlineColor: 'colors',\n  boxShadow: 'shadows',\n  textShadow: 'shadows',\n  zIndex: 'zIndices',\n  width: 'sizes',\n  minWidth: 'sizes',\n  maxWidth: 'sizes',\n  height: 'sizes',\n  minHeight: 'sizes',\n  maxHeight: 'sizes',\n  flexBasis: 'sizes',\n  size: 'sizes',\n  // svg\n  fill: 'colors',\n  stroke: 'colors',\n}\n\nconst positiveOrNegative = (scale, value) => {\n  if (typeof value !== 'number' || value >= 0) {\n    return get(scale, value, value)\n  }\n  const absolute = Math.abs(value)\n  const n = get(scale, absolute, absolute)\n  if (typeof n === 'string') return '-' + n\n  return n * -1\n}\n\nconst transforms = [\n  'margin',\n  'marginTop',\n  'marginRight',\n  'marginBottom',\n  'marginLeft',\n  'marginX',\n  'marginY',\n  'top',\n  'bottom',\n  'left',\n  'right',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: positiveOrNegative,\n  }),\n  {}\n)\n\nconst responsive = styles => theme => {\n  const next = {}\n  const breakpoints = get(theme, 'breakpoints', defaultBreakpoints)\n  const mediaQueries = [\n    null,\n    ...breakpoints.map(n => `@media screen and (min-width: ${n})`),\n  ]\n\n  for (const key in styles) {\n    const value =\n      typeof styles[key] === 'function' ? styles[key](theme) : styles[key]\n\n    if (value == null) continue\n    if (!Array.isArray(value)) {\n      next[key] = value\n      continue\n    }\n    for (let i = 0; i < value.slice(0, mediaQueries.length).length; i++) {\n      const media = mediaQueries[i]\n      if (!media) {\n        next[key] = value[i]\n        continue\n      }\n      next[media] = next[media] || {}\n      if (value[i] == null) continue\n      next[media][key] = value[i]\n    }\n  }\n\n  return next\n}\n\nexport const css = args => (props = {}) => {\n  const theme = { ...defaultTheme, ...(props.theme || props) }\n  let result = {}\n  const obj = typeof args === 'function' ? args(theme) : args\n  const styles = responsive(obj)(theme)\n\n  for (const key in styles) {\n    const x = styles[key]\n    const val = typeof x === 'function' ? x(theme) : x\n\n    if (key === 'variant') {\n      const variant = css(get(theme, val))(theme)\n      result = { ...result, ...variant }\n      continue\n    }\n\n    if (val && typeof val === 'object') {\n      result[key] = css(val)(theme)\n      continue\n    }\n\n    const prop = get(aliases, key, key)\n    const scaleName = get(scales, prop)\n    const scale = get(theme, scaleName, get(theme, prop, {}))\n    const transform = get(transforms, prop, get)\n    const value = transform(scale, val, val)\n\n    if (multiples[prop]) {\n      const dirs = multiples[prop]\n\n      for (let i = 0; i < dirs.length; i++) {\n        result[dirs[i]] = value\n      }\n    } else {\n      result[prop] = value\n    }\n  }\n\n  return result\n}\n"]},"metadata":{},"sourceType":"module"}