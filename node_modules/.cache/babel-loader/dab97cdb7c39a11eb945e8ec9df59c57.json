{"ast":null,"code":"import { jsx } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport 'react';\nimport '@emotion/core';\nimport styled from '@emotion/styled';\nimport { MDXProvider, useMDXComponents } from '@mdx-js/react';\nvar tags = ['p', 'b', 'i', 'a', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'pre', 'code', 'ol', 'ul', 'li', 'blockquote', 'hr', 'em', 'table', 'tr', 'th', 'td', 'em', 'strong', 'del', // mdx\n'inlineCode', 'thematicBreak', // other\n'div', // theme-ui\n'root'];\nvar aliases = {\n  inlineCode: 'code',\n  thematicBreak: 'hr',\n  root: 'div'\n};\n\nvar alias = function alias(n) {\n  return aliases[n] || n;\n};\n\nvar themed = function themed(key) {\n  return function (props) {\n    return css(get(props.theme, \"styles.\" + key))(props.theme);\n  };\n};\n\nvar Styled = styled('div')(themed('div'));\nvar components = {};\ntags.forEach(function (tag) {\n  components[tag] = styled(alias(tag))(themed(tag));\n  Styled[tag] = components[tag];\n});\n\nvar createComponents = function createComponents(comps) {\n  var next = Object.assign({}, components);\n  Object.keys(comps).forEach(function (key) {\n    next[key] = styled(comps[key])(themed(key));\n  });\n  return next;\n};\n\nvar MDXProvider$1 = function MDXProvider$1(ref) {\n  var components = ref.components;\n  var children = ref.children;\n  var outer = useMDXComponents();\n  return jsx(MDXProvider, {\n    components: createComponents(Object.assign({}, outer, components)),\n    children: children\n  });\n};\n\nexport { themed, Styled, components, MDXProvider$1 as MDXProvider };","map":{"version":3,"sources":["../src/index.js"],"names":["const","tags","aliases","inlineCode","thematicBreak","root","alias","n","themed","key","props","css","get","Styled","styled","components","tag","createComponents","comps","next","Object","MDXProvider","children","outer","useMDXComponents","jsx"],"mappings":";;;;;;AAWAA,IAAMC,IAAI,GAAG,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,YAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAAA;AAAA,YAAA,EAAA,eAAA,EAAA;AAAA,KAAA,EAAA;AAAbD,MAAa,CAAbA;AAoCAA,IAAME,OAAO,GAAG;AACdC,EAAAA,UAAU,EADI,MAAA;AAEdC,EAAAA,aAAa,EAFC,IAAA;AAGdC,EAAAA,IAAI,EAAE;AAHQ,CAAhBL;;AAMAA,IAAMM,KAAK,GAAA,SAALA,KAAK,CAAGC,CAAH,EAAGA;AAAAA,SAAKL,OAAO,CAAPA,CAAO,CAAPA,IAAcK,CAAnBA;AAAdP,CAAAA;;AAEA,IAAaQ,MAAM,GAAA,SAANA,MAAM,CAAGC,GAAH,EAAGA;AAAAA,SAAAA,UAAOC,KAAPD,EAAOC;AAAAA,WAC3BC,GAAG,CAACC,GAAG,CAACF,KAAK,CAAN,KAAA,EAAA,YAAPC,GAAO,CAAJ,CAAHA,CAAuCD,KAAK,CAA5CC,KAAAA,CAD2BD;AAC3BC,GADoBF;AAAf,CAAP;;AAGA,IAAaI,MAAM,GAAGC,MAAM,CAANA,KAAM,CAANA,CAAcN,MAAM,CAAnC,KAAmC,CAApBM,CAAtB;AAEA,IAAaC,UAAU,GAAhB,EAAP;AAEAd,IAAI,CAAJA,OAAAA,CAAAA,UAAae,GAAbf,EAAae;AACXD,EAAAA,UAAU,CAAVA,GAAU,CAAVA,GAAkBD,MAAM,CAACR,KAAK,CAAZQ,GAAY,CAAN,CAANA,CAAmBN,MAAM,CAA3CO,GAA2C,CAAzBD,CAAlBC;AACAF,EAAAA,MAAM,CAANA,GAAM,CAANA,GAAcE,UAAU,CAAxBF,GAAwB,CAAxBA;AAFFZ,CAAAA;;AAKAD,IAAMiB,gBAAgB,GAAA,SAAhBA,gBAAgB,CAAGC,KAAH,EAAGA;MACjBC,IAAI,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAb,UAAa,C;AACbC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAAAA,UAA2BX,GAA3BW,EAA2BX;AACzBU,IAAAA,IAAI,CAAJA,GAAI,CAAJA,GAAYL,MAAM,CAACI,KAAK,CAAZJ,GAAY,CAAN,CAANA,CAAmBN,MAAM,CAArCW,GAAqC,CAAzBL,CAAZK;AADFC,GAAAA;SAGA,I;AALFpB,CAAAA;;AAQA,IAAaqB,aAAW,GAAA,SAAXA,aAAW,CAAG,GAAH,EAAG;uBAEzBC,U;;MAEMC,KAAK,GAAGC,gBAAd,E;SAEOC,GAAG,CAAA,WAAA,EAAe;AACvBV,IAAAA,UAAU,EAAEE,gBAAgB,CAAC,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,EADN,UACM,CAAD,CADL;cAEvBK;AAFuB,GAAf,C;AANL,CAAP","sourcesContent":["import { jsx } from '@theme-ui/core'\nimport { css, get } from '@theme-ui/css'\nimport React from 'react'\nimport { ThemeContext } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport {\n  MDXProvider as _MDXProvider,\n  useMDXComponents\n} from '@mdx-js/react'\n\n// mdx components\nconst tags = [\n  'p',\n  'b',\n  'i',\n  'a',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'img',\n  'pre',\n  'code',\n  'ol',\n  'ul',\n  'li',\n  'blockquote',\n  'hr',\n  'em',\n  'table',\n  'tr',\n  'th',\n  'td',\n  'em',\n  'strong',\n  'del',\n  // mdx\n  'inlineCode',\n  'thematicBreak',\n  // other\n  'div',\n  // theme-ui\n  'root',\n]\n\nconst aliases = {\n  inlineCode: 'code',\n  thematicBreak: 'hr',\n  root: 'div',\n}\n\nconst alias = n => aliases[n] || n\n\nexport const themed = key => props =>\n  css(get(props.theme, `styles.${key}`))(props.theme)\n\nexport const Styled = styled('div')(themed('div'))\n\nexport const components = {}\n\ntags.forEach(tag => {\n  components[tag] = styled(alias(tag))(themed(tag))\n  Styled[tag] = components[tag]\n})\n\nconst createComponents = comps => {\n  const next = { ...components }\n  Object.keys(comps).forEach(key => {\n    next[key] = styled(comps[key])(themed(key))\n  })\n  return next\n}\n\nexport const MDXProvider = ({\n  components,\n  children,\n}) => {\n  const outer = useMDXComponents()\n\n  return jsx(_MDXProvider, {\n    components: createComponents({ ...outer, ...components }),\n    children,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}